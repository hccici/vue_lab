function getMap(arr) {
  const map = {}
  // path -> component
  arr.forEach(item => {
    map[`${this.base || ''}${item.path}`] = item.component
  })
  return map
}
// 用来反映当前的的路由信息的，并触发router-view渲染页面
class Route {
  constructor(mode = 'hash') {
    this.path = ''
    // 初始化
    if (mode === 'hash') {
      // !先判断用户打开时有没有hash值，没有的话跳转到#/
      location.hash ? '' : location.hash = "/";
      window.addEventListener('hashchange', () => {
        this.path = location.hash.slice(1)
      })
      // !首次设置path的值
      this.path = location.hash.slice(1)
    } else {
      // history
      window.addEventListener('popstate', () => {
        this.path = location.pathname
      })
      // 因为a标签不能触发popstate，所以劫持它
      window.addEventListener('load', () => {
        const elA = window.document.querySelectorAll('a.router')
        if (elA) {
          elA.forEach(item => {
            item.addEventListener('click', (e) => {
              e.preventDefault()
              history.pushState(null, '', item.getAttribute('href'))
              this.path = location.pathname
            })
          })
        }
      })
      // !首次设置path的值
      this.path = location.pathname
    }
  }
}
class Router {
  static install(Vue) {
    Vue.mixin({
      beforeCreate() {
        // 因为给vue的根实例加了router实例，所以可以给每个vue实例挂载router实例
        if (this.$options.router) {
          // 是vue根实例
          this._router = this.$options.router
          // ?这里还不太清楚原理，route里的属性变化时，使用到route的组件会更新
          Vue.util.defineReactive(this,"xxx",this._router._route)
        } else {
          // 非vue根实例
          this._router = this.$parent._router
        }
        // 提供外部访问接口
        Object.defineProperty(this, '$router', {
          get() {
            return this._router
          }
        })
        Object.defineProperty(this, '$route', {
          get() {
            return this._router._route
          }
        })
      }
    })
    // 全局注册router-view和router-link组件
    Vue.component('router-view', {
      beforeCreate(){
        console.log('router-view实例被创建')
      },
      updated(){
        console.log('router-view更新')
      },
      render(h) {
        let path = this._router._route.path
        let routeMap = this._router._routeMap;
        return h(routeMap[path] || this._router.routes[0].component)
      }
    })
    Vue.component('router-link', {
      props: {
        to: String
      },
      render(h) {
        let mode = this._router.mode;
        let to = mode === "hash" ? "#" + this.to : this.to
        to = this._router.base ? this._router.base + to : to
        return h('a', { attrs: { href: to }, class: ['router'] }, this.$slots.default)
      }
    })
  }
  constructor(options) {
    Object.keys(options).forEach(key => {
      this[key] = options[key]
    })
    this._routeMap = getMap.call(this, this.routes)
    this._route = new Route(this.mode)
  }
}
export default Router